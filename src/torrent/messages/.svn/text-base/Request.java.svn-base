package torrent.messages;

import java.io.DataOutputStream;
import java.io.IOException;

/**
 * CLASSE REQUEST : modelise un message qui fait la demande d'un block à un
 * pair.
 * 
 * @author DE GIETER-VENDE Antoine && MARGUET Alban (groupe 36)
 * 
 */
public class Request extends Message {
	private byte[] body;
	private String bodyS;
	private int index;

	/**
	 * CONSTRUCTEUR
	 * 
	 * @param index
	 *            : int, index du message.
	 * @param begin
	 *            : int, debut du message.
	 * @param length
	 *            : int, longueur du message.
	 */
	public Request(int index, int begin, int length) {
		super(13, ID.request);
		this.bodyS = "" + index + begin + length;
		this.body = bodyS.getBytes();
		this.index = index;
		System.out.println("request created");
	}

	/**
	 * methode d'ecriture du message
	 * 
	 * @param dos
	 *            : DataOutputStream, flux de données dans laquelle la methode
	 *            va écrire.
	 */
	@Override
	public void write(DataOutputStream dos) {
		try {
			dos.writeInt(length);
			dos.write(id.ordinal());
			dos.write(body);
			dos.flush();
		} catch (IOException e) {
			System.out.println("erreur envoi message");
		}
	}

	/**
	 * @param visitor
	 *            : MessageVisitor, permet l'utilisation du pattern Visitor avec
	 *            le message Unchoke.
	 */
	public void accept(MessageVisitor visitor) {
		visitor.visit(this);
	}

	/**
	 * 
	 * @return body : byte[] le corps du message.
	 */
	public byte[] getBody() {
		return body;
	}

	public int getIndex() {
		return index;
	}
}
